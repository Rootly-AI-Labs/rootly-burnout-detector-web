# Database (PostgreSQL required)
# For local development with Docker:
# DATABASE_URL=postgresql://postgres:password@localhost:5432/burnout_detector
# For Railway deployment, this will be auto-populated
DATABASE_URL=postgresql://user:password@localhost/dbname

# JWT Configuration
JWT_SECRET_KEY=your-secret-key-change-in-production-use-openssl-rand-hex-32
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=10080

# Google OAuth
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_REDIRECT_URI=http://localhost:8000/auth/google/callback

# GitHub OAuth
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret
GITHUB_REDIRECT_URI=http://localhost:8000/auth/github/callback

# Frontend URLs
FRONTEND_URL=http://localhost:3000
PRODUCTION_FRONTEND_URL=https://your-frontend-domain.vercel.app

# Environment
ENVIRONMENT=development

# Rootly API
ROOTLY_API_BASE_URL=https://api.rootly.com

# Rate Limiting Configuration
# Redis for distributed rate limiting (production)
REDIS_URL=redis://localhost:6379/1
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=1

# Rate limiting bypass for development/testing
BYPASS_RATE_LIMITING=false

# GitHub API Configuration
USE_SMART_GITHUB_CACHING=true
GITHUB_API_MAX_RETRIES=3
GITHUB_API_CACHE_TTL=86400

# Token Encryption (for encrypting stored API tokens)
# Generate with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
ENCRYPTION_KEY=your-fernet-encryption-key-here